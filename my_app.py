import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pickle
from catboost import CatBoostClassifier
import tensorflow as tf
import os

st.set_page_config(page_title="ML", layout="centered", initial_sidebar_state="expanded")

with open("assets/styles.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

file_path = r'C:\Users\–ñ–∞–Ω–Ω–∞\Desktop\OMGTU\ML_RGR\ML_RGR\data\final_data_card_transdata.csv'
data = pd.read_csv(file_path)

output_dir = r'C:\Users\–ñ–∞–Ω–Ω–∞\Desktop\OMGTU\ML_RGR\ML_RGR\rgr_models'
scaler_path = os.path.join(output_dir, 'scaler.pkl')

try:
    with open(scaler_path, 'rb') as f:
        scaler = pickle.load(f)
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ scaler: {str(e)}")
    scaler = None

def load_model(model_name, method='pickle'):
    model_path = os.path.join(output_dir, f'{model_name}.{method}' if method != 'tensorflow' else f'{model_name}.keras')
    try:
        if method == 'pickle':
            with open(model_path, 'rb') as f:
                return pickle.load(f)
        elif method == 'catboost':
            model = CatBoostClassifier()
            model.load_model(model_path)
            return model
        elif method == 'tensorflow':
            return tf.keras.models.load_model(model_path)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ {model_name}: {str(e)}")
        return None
    
models = {}
models['kNN (Manhattan)'] = load_model('knn_manhattan', method='pickle')
models['Gradient Boosting'] = load_model('gradient_boosting', method='pickle')
models['CatBoost'] = load_model('catboost', method='catboost')
models['Bagging'] = load_model('bagging', method='pickle')
models['Stacking'] = load_model('stacking', method='pickle')
models['Neural Network'] = load_model('neural_network', method='tensorflow')

available_models = {k: v for k, v in models.items() if v is not None}
if not available_models:
    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω—É –º–æ–¥–µ–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–µ–π.")
    st.stop()


with st.sidebar:
    st.markdown("<h2 style='color:#3f3f3f;'>–ú–µ–Ω—é</h2>", unsafe_allow_html=True)
    page = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É",
        ["–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ", "–û –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "–ò–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª–µ–π"],
        label_visibility="collapsed"
    )


if page == "–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ":
    st.markdown("<div class='title'>üê±‚Äçüíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ</div>", unsafe_allow_html=True)

    st.markdown("""<hr style="border-color:#333;">""", unsafe_allow_html=True)
    
    col1, col2 = st.columns([1, 2], gap="medium")

    with col1:
        st.image("photo.jpg", width=280)

    with col2:
        st.markdown("""
            <div class='info-card'>
                <div class='subtitle'>üêæ–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
                <div class='info'> <u>–§–ò–û</u>: –°–º–æ–ª–æ–≤–∞—è –ñ–∞–Ω–Ω–∞ –ï–≤–≥–µ–Ω—å–µ–≤–Ω–∞</div>
                <div class='info'><u>–ù–æ–º–µ—Ä —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø—ã:</u> –ú–û-231</div>
            </div>
        """, unsafe_allow_html=True)

    st.markdown("<div class='subtitle'>üìö –¢–µ–º–∞ —Ä–∞–±–æ—Ç—ã</div>", unsafe_allow_html=True)
    st.markdown("""
        <div class='info'>
            –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–∞—à–±–æ—Ä–¥–∞) –¥–ª—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ –º–æ–¥–µ–ª–µ–π ML –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        </div>
    """, unsafe_allow_html=True)

elif page == "–û –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö":
    st.markdown("<div class='title'>üìº –û –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö</div>", unsafe_allow_html=True)

    st.markdown("""
        <div class='section'>
            <div class='subtitle'>üí° –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å</div>
            <div class='info'>
                –î–∞—Ç–∞—Å–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö —Å –∫—Ä–µ–¥–∏—Ç–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏, —Ü–µ–ª—å—é –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π. 
                –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –æ–¥–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é, –∞ —Ü–µ–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–∫–∞–∑—ã–≤–∞–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–æ–π (1) –∏–ª–∏ –Ω–µ—Ç (0). 
                –≠—Ç–æ—Ç –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
            </div>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("""
        <div class='section'>
            <div class='subtitle'>üîç –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤</div>
            <div class='info'>
                <i><strong>distance_from_home</strong></i>: –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –¥–æ–º–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–∫–º).<br>
                <i><strong>distance_from_last_transaction</strong></i>: –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–∫–º).<br>
                <i><strong>repeat_retailer</strong></i>: –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ä–∏—Ç–µ–π–ª–µ—Ä–∞.<br>
                <i><strong>used_chip</strong></i>: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∏–ø–∞ –ø—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.<br>
                <i><strong>used_pin_number</strong></i>: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ PIN-–∫–æ–¥–∞ –ø—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.<br>
                <i><strong>online_order</strong></i>: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–≤–µ—Ä—à–µ–Ω–∞ –æ–Ω–ª–∞–π–Ω.<br>
                <i><strong>transaction_speed</strong></i>: –í—Ä–µ–º—è, –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–µ–∫).<br>
                <i><strong>secure_online_transaction</strong></i>: –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞—â–∏—â—ë–Ω–Ω–æ–π –æ–Ω–ª–∞–π–Ω-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.<br>
                <i><strong>fraud</strong></i>: –¶–µ–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è.
            </div>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("""
        <div class='section'>
            <div class='subtitle'>üõ†Ô∏è –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏</div>
            <div class='info'>
                - –£–¥–∞–ª–µ–Ω—ã –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å –≤—ã—Å–æ–∫–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π: <i><strong>ratio_to_median_purchase_price</strong></i> (–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è 0.91) –∏ <i><strong>high_price_flag</strong></i> (–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è 0.62), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö.<br>
                - –î–∞–Ω–Ω—ã–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ <i>SMOTE</i>, —Ç–∞–∫ –∫–∞–∫ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –∫–ª–∞—Å—Å—ã –±—ã–ª–∏ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã (–±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ‚Äî –Ω–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ).<br>
                - –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º <i>StandardScaler</i> –¥–ª—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∫ –µ–¥–∏–Ω–æ–º—É –º–∞—Å—à—Ç–∞–±—É.
            </div>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("""
        <div class='section'>
            <div class='subtitle'>üìà –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ EDA</div>
            <div class='info'>
                - –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ –ø–æ–∫–∞–∑–∞–ª —Å–∏–ª—å–Ω—É—é –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: –æ–∫–æ–ª–æ 90% —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ‚Äî –Ω–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ.<br>
                - –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—ã—è–≤–∏–ª –≤—ã—Å–æ–∫—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –º–µ–∂–¥—É –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏ <i><strong>ratio_to_median_purchase_price</strong></i>, <i><strong>high_price_flag</strong></i> –∏ —Ü–µ–ª–µ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –∏—Ö —É–¥–∞–ª–µ–Ω–∏—é.<br>
                - –í—ã–±—Ä–æ—Å—ã –≤ –ø—Ä–∏–∑–Ω–∞–∫–µ <i><strong>distance_from_home</strong> –±—ã–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω—ã: –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–≤–µ—Ä—à–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –±–æ–ª–µ–µ 1000 –∫–º –æ—Ç –¥–æ–º–∞, —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞.<br>
                - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ <i><strong>used_pin_number</strong></i> –∏ <i><strong>online_order</strong></i>, –ø–æ–∫–∞–∑–∞–ª–æ, —á—Ç–æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–∞—â–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –æ–Ω–ª–∞–π–Ω –∏ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PIN-–∫–æ–¥–∞.
            </div>
        </div>
    """, unsafe_allow_html=True)

elif page == "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è":
    st.markdown("<div class='title'>üìâ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è</div>", unsafe_allow_html=True)

    st.markdown("<div class='subtitle'>üìä –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç –¥–æ–º–∞</div>", unsafe_allow_html=True)
    fig1, ax1 = plt.subplots(figsize=(10, 6))
    sns.histplot(data=data, x="distance_from_home", bins=50, color="#ff7e05")
    ax1.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç –¥–æ–º–∞")
    ax1.set_xlabel("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–∫–º)")
    ax1.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
    plt.tight_layout()
    st.pyplot(fig1)

    st.markdown("<div class='subtitle'>üìè Boxplot: –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º</div>", unsafe_allow_html=True)
    fig2, ax2 = plt.subplots(figsize=(10, 6))
    sns.boxplot(data=data, x="fraud", y="distance_from_last_transaction", palette={"0": "#fac761", "1": "#ff7e05"})
    ax2.set_title("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º")
    ax2.set_xlabel("–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ (0: –ù–µ—Ç, 1: –î–∞)")
    ax2.set_ylabel("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–∫–º)")
    plt.tight_layout()
    st.pyplot(fig2)

    st.markdown("<div class='subtitle'>üìä Countplot: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º</div>", unsafe_allow_html=True)
    fig3, ax3 = plt.subplots(figsize=(10, 6))
    sns.countplot(data=data, x="online_order", hue="fraud", palette="Oranges")
    ax3.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º")
    ax3.set_xlabel("–û–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑ (0: –ù–µ—Ç, 1: –î–∞)")
    ax3.set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    plt.tight_layout()
    st.pyplot(fig3)

    st.markdown("<div class='subtitle'>üå°Ô∏è Heatmap: –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞</div>", unsafe_allow_html=True)
    numeric_data = data.select_dtypes(include=[np.number])
    fig4, ax4 = plt.subplots(figsize=(10, 6))
    sns.heatmap(numeric_data.corr(), annot=True, cmap="YlOrRd", vmin=-1, vmax=1)
    ax4.set_title("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
    plt.tight_layout()
    st.pyplot(fig4)

elif page == "–ò–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª–µ–π":
    st.markdown("<div class='title'>üíª –ò–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª–µ–π</div>", unsafe_allow_html=True)

    st.markdown("<div class='subtitle'>–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞</div>", unsafe_allow_html=True)

    model_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è", list(available_models.keys()))

    uploaded_file = st.file_uploader("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏", type="csv")
    
    if uploaded_file is not None:
        input_data = pd.read_csv(uploaded_file)
        required_columns = ['distance_from_home', 'distance_from_last_transaction', 'repeat_retailer', 'used_chip', 'used_pin_number', 'online_order', 'transaction_speed', 'secure_online_transaction']
        if all(col in input_data.columns for col in required_columns):
            input_data = input_data[required_columns]
        else:
            st.error("CSV —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã: " + ", ".join(required_columns))
            input_data = None
    else:
        st.markdown("<div class='info'>–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é:</div>", unsafe_allow_html=True)

        col1, col2 = st.columns(2)
        with col1:
            distance_from_home = st.number_input("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –¥–æ–º–∞ (–∫–º)", min_value=0.0, value=5.0, step=0.1)
            distance_from_last_transaction = st.number_input("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–∫–º)", min_value=0.0, value=2.0, step=0.1)
            repeat_retailer = st.selectbox("–ü–æ–≤—Ç–æ—Ä–Ω—ã–π —Ä–∏—Ç–µ–π–ª–µ—Ä", [0, 1])
            used_chip = st.selectbox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∏–ø–∞", [0, 1])
        with col2:
            used_pin_number = st.selectbox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ PIN", [0, 1])
            online_order = st.selectbox("–û–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑", [0, 1])
            transaction_speed = st.number_input("–°–∫–æ—Ä–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–µ–∫)", min_value=0.0, value=0.1, step=0.01)
            secure_online_transaction = st.selectbox("–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–Ω–ª–∞–π–Ω-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è", [0, 1])

        if distance_from_home < 0 or distance_from_last_transaction < 0 or transaction_speed < 0:
            st.error("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏!")
        else:
            input_data = pd.DataFrame({
                'distance_from_home': [distance_from_home],
                'distance_from_last_transaction': [distance_from_last_transaction],
                'repeat_retailer': [repeat_retailer],
                'used_chip': [used_chip],
                'used_pin_number': [used_pin_number],
                'online_order': [online_order],
                'transaction_speed': [transaction_speed],
                'secure_online_transaction': [secure_online_transaction]
            })

    if st.button("üöÄ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ") and input_data is not None and scaler is not None:
        try:
            input_scaled = scaler.transform(input_data)
            model = available_models[model_choice]

            if model_choice == 'Neural Network':
                prediction = (model.predict(input_scaled, verbose=0) > 0.5).astype(int)[0]
                probability = float(model.predict(input_scaled, verbose=0)[0])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ float
            else:
                prediction = model.predict(input_scaled)[0]
                probability = model.predict_proba(input_scaled)[0][1]

            result_class = 'result-safe' if prediction == 0 else 'result-fraud'
            st.markdown(f"<div class='{result_class}'><u>–†–µ–∑—É–ª—å—Ç–∞—Ç:</u> {'–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ' if prediction == 1 else '–ù–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ'}</div>", unsafe_allow_html=True)
            st.markdown(f"<div class='{result_class}'><u>–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞:</u> {probability:.2%}</div>", unsafe_allow_html=True)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–∏: {str(e)}")

    st.markdown("</div>", unsafe_allow_html=True)